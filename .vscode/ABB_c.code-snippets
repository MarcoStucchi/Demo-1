{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"New function 1": {

		"prefix": "ABB_fun_1",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${6:function_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"* @return ${7:return_value_description}",
			"***************************************************/",
		    "${1:return_type} ${2:function_name} (${3:par_1_type} ${4:par_1}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $6",
			"$1 $2 ($3 $4);",
		],
		"description": "New function with 1 parameter, according to ABB template"
	}

	"New function 2": {

		"prefix": "ABB_fun_2",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${9:function_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"* @param  $7  ${8:par_2_description}",
			"* @return ${10:return_value_description}",
			"***************************************************/",
		    "${1:return_type} ${2:function_name} (${3:par_1_type} ${4:par_1}, ${6:par_2_type} ${7:par_2}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $9",
			"$1 $2 ($3 $4, $6 $7);",
		],
		"description": "New function with 2 parameters, according to ABB template"
	}	

	"New function 3": {

		"prefix": "ABB_fun_3",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${12:function_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"* @param  $7  ${8:par_2_description}",
			"* @param  $10  ${11:par_3_description}",
			"* @return ${13:return_value_description}",
			"***************************************************/",
		    "${1:return_type} ${2:function_name} (${3:par_1_type} ${4:par_1}, ${6:par_2_type} ${7:par_2}, ${9:par_3_type} ${10:par_3}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $12",
			"$1 $2 ($3 $4, $6 $7, $9 $10);",

		],
		"description": "New function with 3 parameters, according to ABB template"
	}	

	"New procedure 1": {

		"prefix": "ABB_proc_1",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${6:procedure_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"***************************************************/",
		    "void ${2:procedure_name} (${3:par_1_type} ${4:par_1}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $6",
			"void $2 ($3 $4);",

		],
		"description": "New procedure with 1 parameter, according to ABB template"
	}

	"New procedure 2": {

		"prefix": "ABB_proc_2",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${9:procedure_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"* @param  $7  ${8:par_2_description}",
			"***************************************************/",
		    "void ${2:procedure_name} (${3:par_1_type} ${4:par_1}, ${6:par_2_type} ${7:par_2}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $9",
			"void $2 ($3 $4, $6 $7);",
		],
		"description": "New procedure with 2 parameters, according to ABB template"
	}	

	"New procedure 3": {

		"prefix": "ABB_proc_3",
		"scope": "c",
		"body": [
			"/***************************************************",
			"* @brief  ${12:procedure_brief_description}",
			"* @param  $4  ${5:par_1_description}",
			"* @param  $7  ${8:par_2_description}",
			"* @param  $10  ${11:par_3_description}",
			"***************************************************/",
		    "void ${2:procedure_name} (${3:par_1_type} ${4:par_1}, ${6:par_2_type} ${7:par_2}, ${9:par_3_type} ${10:par_3}) {",
            "",
		    "    // Local variables",
            "",
		    "    // $0",
            "",
		    "}  // end of $2",
			"",
			"// $12",
			"void $2 ($3 $4, $6 $7, $9 $10);",
		],
		"description": "New procedure with 3 parameters, according to ABB template"
	}	

}